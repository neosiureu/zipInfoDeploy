<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  AnnounceMapper
  - 공지사항 게시글 관련 DB 작업을 처리하는 매퍼
  - DTO는 com.zipinfo.project.announce.model.dto.Announce 사용
-->
<mapper namespace="com.zipinfo.project.announce.model.mapper.AnnounceMapper">

  <!--
    Announce DTO와 컬럼 매핑
    resultMap은 조회시 DB 컬럼과 DTO 필드 매핑에 사용
  -->
  <resultMap id="AnnounceResultMap" type="com.zipinfo.project.announce.model.dto.Announce">
    <id property="announceNo" column="ANNOUNCE_NO"/>
    <result property="announceTitle" column="ANNOUNCE_TITLE"/>
    <result property="announce" column="ANNOUNCE"/>
    <result property="announceWriteDate" column="ANNOUNCE_WRITE_DATE"/>
    <result property="announceReadCount" column="ANNOUNCE_READ_COUNT"/>
    <result property="announceDelFl" column="ANNOUNCE_DEL_FL"/>
    <result property="memberNo" column="MEMBER_NO"/>
  </resultMap>

  <!--
    공지사항 게시글 등록
    - ANNOUNCE_NO는 시퀀스로 자동생성
    - ANNOUNCE_WRITE_DATE는 SYSDATE 사용
    - ANNOUNCE_READ_COUNT는 0으로 초기화
    - ANNOUNCE_DEL_FL은 'N' (삭제되지 않음) 초기화
  -->
  <insert id="insertannouce" parameterType="com.zipinfo.project.announce.model.dto.Announce" 
          useGeneratedKeys="true" keyProperty="announceNo" keyColumn="ANNOUNCE_NO">
    INSERT INTO ANNOUNCE (
      ANNOUNCE_NO,
      ANNOUNCE_TITLE,
      ANNOUNCE,
      ANNOUNCE_WRITE_DATE,
      ANNOUNCE_READ_COUNT,
      ANNOUNCE_DEL_FL,
      MEMBER_NO
    ) VALUES (
      ANNOUNCE_SEQ.NEXTVAL,
      #{announceTitle},
      #{announce},
      SYSDATE,
      0,
      'N',
      #{memberNo}
    )
  </insert>

  <!--
    공지사항 게시글 수정
    - ANNOUNCE_NO 기준으로 제목과 내용만 수정
  -->
  <update id="updateAnnounce" parameterType="com.zipinfo.project.announce.model.dto.Announce">
    UPDATE ANNOUNCE
    SET
      ANNOUNCE_TITLE = #{announceTitle},
      ANNOUNCE = #{announce}
    WHERE ANNOUNCE_NO = #{announceNo}
  </update>

  <!--
    공지사항 게시글 삭제 (논리삭제)
    - ANNOUNCE_DEL_FL 값을 'Y'로 변경
  -->
  <update id="deleteAnnounce" parameterType="map">
    UPDATE ANNOUNCE
    SET ANNOUNCE_DEL_FL = 'Y'
    WHERE ANNOUNCE_NO = #{announceNo}
  </update>

  <!--
    공지사항 게시글 목록 조회 (페이징 처리)
    - 삭제되지 않은 게시글만 조회 (ANNOUNCE_DEL_FL = 'N')
    - 10개씩 페이징 처리
  -->
  <select id="selectAnnounceList" resultMap="AnnounceResultMap" parameterType="map">
    SELECT
      ANNOUNCE_NO,
      ANNOUNCE_TITLE,
      ANNOUNCE,
      ANNOUNCE_WRITE_DATE,
      ANNOUNCE_READ_COUNT,
      ANNOUNCE_DEL_FL,
      MEMBER_NO
    FROM ANNOUNCE
    WHERE ANNOUNCE_DEL_FL = 'N'
    ORDER BY ANNOUNCE_NO DESC
    OFFSET (#{cp} - 1) * 10 ROWS FETCH NEXT 10 ROWS ONLY
  </select>

  <!--
    공지사항 게시글 검색 목록 조회
    - key 값에 따라 제목(t), 내용(c), 제목+내용(tc), 작성자 닉네임 검색 지원
    - 페이징 처리 포함
  -->
  <select id="searchList" resultMap="AnnounceResultMap" parameterType="map">
    SELECT
      ANNOUNCE_NO,
      ANNOUNCE_TITLE,
      ANNOUNCE,
      TO_CHAR(ANNOUNCE_WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ANNOUNCE_WRITE_DATE,
      ANNOUNCE_READ_COUNT,
      ANNOUNCE_DEL_FL,
      MEMBER_NO
    FROM ANNOUNCE
    WHERE ANNOUNCE_DEL_FL = 'N'
    <choose>
      <when test="key == 't'">
        AND ANNOUNCE_TITLE LIKE '%' || #{query} || '%'
      </when>
      <when test="key == 'c'">
        AND ANNOUNCE LIKE '%' || #{query} || '%'
      </when>
      <when test="key == 'tc'">
        AND (ANNOUNCE_TITLE LIKE '%' || #{query} || '%' OR ANNOUNCE LIKE '%' || #{query} || '%')
      </when>
      <otherwise>
        AND MEMBER_NO IN (
          SELECT MEMBER_NO FROM MEMBER
          WHERE MEMBER_NICKNAME LIKE '%' || #{query} || '%'
        )
      </otherwise>
    </choose>
    ORDER BY ANNOUNCE_NO DESC
    OFFSET (#{cp} - 1) * 10 ROWS FETCH NEXT 10 ROWS ONLY
  </select>

  <!--
    조회수 증가
  -->
  <update id="increaseViewCount" parameterType="int">
    UPDATE ANNOUNCE
    SET ANNOUNCE_READ_COUNT = ANNOUNCE_READ_COUNT + 1
    WHERE ANNOUNCE_NO = #{announceNo}
  </update>

  <!--
    공지사항 게시글 단일 조회
    - 삭제되지 않은 게시글만 조회
  -->
  <select id="selectOne" resultMap="AnnounceResultMap" parameterType="map">
    SELECT
      ANNOUNCE_NO,
      ANNOUNCE_TITLE,
      ANNOUNCE,
      TO_CHAR(ANNOUNCE_WRITE_DATE, 'YYYY-MM-DD HH24:MI:SS') AS ANNOUNCE_WRITE_DATE,
      ANNOUNCE_READ_COUNT,
      ANNOUNCE_DEL_FL,
      MEMBER_NO
    FROM ANNOUNCE
    WHERE ANNOUNCE_NO = #{announceNo}
      AND ANNOUNCE_DEL_FL = 'N'
  </select>

</mapper>
