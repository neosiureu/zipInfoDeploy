<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.zipinfo.project.stock.model.mapper.StockMapper">
	<resultMap id="stockMap" type="com.zipinfo.project.stock.model.dto.Stock">
  <!-- 기본키 -->
	  <id property="stockNo" column="STOCK_NO"/>
	
	  <!-- 일반 컬럼 -->
	  <result property="memberNo" column="MEMBER_NO"/>
	  <result property="stockName" column="STOCK_NAME"/>
	  <result property="stockSellPrice" column="STOCK_SELL_PRICE"/>
	  <result property="stockManageFee" column="STOCK_FEE_MONTH_ADD"/>
	  <result property="stockFeeMonth" column="STOCK_FEE_MONTH"/>
	  <result property="stockInfo" column="STOCK_INFO"/>
	  <result property="stockType" column="STOCK_TYPE"/>
	  <result property="stockForm" column="STOCK_FORM"/>
	  <result property="exclusiveArea" column="EXCLUSIVE_AREA"/>
	  <result property="supplyArea" column="SUPPLY_AREA"/>
	  <result property="currentFloor" column="CURRENT_FLOOR"/>
	  <result property="floorTotalCount" column="FLOOR_TOTAL_COUNT"/>
	  <result property="roomCount" column="ROOM_COUNT"/>
	  <result property="bathCount" column="BATH_COUNT"/>
	  <result property="stockDirection" column="STOCK_DIRECTION"/>
	  <result property="ableDate" column="ABLE_DATE"/>
	  <result property="useApprovalDate" column="USE_APPROVAL_DATE"/>
	  <result property="registDate" column="REGIST_DATE"/>
	  <result property="stockDetail" column="STOCK_DETAIL"/>
	  <result property="stockAddress" column="STOCK_ADDRESS"/>
	  <result property="regionNo" column="REGION_NO"/>
	  <result property="sellYn" column="SELL_YN"/>
	
	  <!-- 좌표 (STOCK_COORD 테이블에서 가져온 값이라고 가정) -->
	  <result property="lat" column="LAT"/>
	  <result property="lng" column="LNG"/>
	  <result property="companyName" column="COMPANY_NAME"/>
	  <result property="companyLocation" column="COMPANY_LOCATION"/>
	  <result property="presidentName" column="PRESIDENT_NAME"/>
	  <result property="brokerNo" column="BROKER_NO"/>
	  <result property="presidentPhone" column="PRESIDENT_PHONE"/>
	</resultMap>
	<resultMap id="coordsMap"  type="com.zipinfo.project.stock.model.dto.CoordsStatInfo">
	  <result property="latCenter" column="latCenter"/>
	  <result property="lngCenter" column="lngCenter"/>
	  <result property="latMin" column="latMin"/>
	  <result property="lngMin" column="lngMin"/>
	  <result property="latMax" column="latMax"/>
	  <result property="lngMax" column="lngMax"/>
	</resultMap>
	<select id="selectStockInRange">
		SELECT *
			FROM (
			    SELECT STOCK_NO AS stockNo, LAT AS lat, LNG AS lng
			    FROM STOCK_COORD 
			    WHERE LAT &gt; #{swLat} <!-- > escape 문자로 대체-->
			    AND LAT &lt; #{neLat} <!-- < escape 문자로 대체-->
			    AND LNG &gt; #{swLng} <!-- > escape 문자로 대체-->
			    AND LNG &lt; #{neLng} <!-- < escape 문자로 대체-->
			) c
			INNER JOIN (SELECT * FROM STOCK_INFO
			<where>
				<if test="searchKeyWord != null and searchKeyWord != ''">
			      AND (STOCK_NAME LIKE  '%' || #{searchKeyWord} || '%'
			      OR STOCK_NAME LIKE CONCAT(#{searchKeyWord}, '%')
			      OR STOCK_NAME LIKE CONCAT('%', #{searchKeyWord})
			      OR STOCK_NAME = #{searchKeyWord})
			    </if>
			    <if test="locationCode != -1">
			    	<if test="locationCode &lt; 100"> <!--들어온 locationCode 가 두자리수일떄-->
			    		AND REGION_NO LIKE CONCAT(#{locationCode}, '%') <!-- 시도 코드 두자리만 들어왔을떄 주소 코드가 앞 두자리가 일치하는 것 모두를 SELECT-->
			    	</if>
			    	<if test="locationCode &gt; 100"> <!--들어온 locationCode 가 다섯자리 수 일떄-->
			    		AND REGION_NO = #{locationCode} <!-- 주소 코드 다섯자리가 정확히 일치하는 것만 SELECT-->
			    	</if>
			      
			      
			    </if>
			    <if test="stockType != -1">
			      AND STOCK_TYPE = #{stockType}
			    </if>
			    <if test="stockForm != -1">
			      AND STOCK_FORM = #{stockForm}
			    </if>
			</where>)
			 i ON c.stockNo = i.STOCK_NO
			 INNER JOIN (SELECT MEMBER_NO, COMPANY_NAME, COMPANY_LOCATION, PRESIDENT_NAME, BROKER_NO, PRESIDENT_PHONE FROM BROKER_INFO) b ON i.MEMBER_NO = b.MEMBER_NO
	</select>
	<select id="selectSigunguFullName">
		SELECT TOWN_NAME FROM BOARD_TOWN
		WHERE TOWN_NO LIKE #{sido} || '___'
	</select>	

	<select id="getCoordsFromStock"  resultMap="coordsMap">
		SELECT AVG(lat) AS latCenter, AVG(lng) AS lngCenter
		,MIN(lat) AS latMin, MIN(lng) AS lngMin
		,MAX(lat) AS latMax, MAX(lng) AS lngMax
		, COUNT(*)
			FROM (
			    SELECT STOCK_NO AS stockNo, LAT AS lat, LNG AS lng
			    FROM STOCK_COORD 
			
			) c
			INNER JOIN (SELECT * FROM STOCK_INFO
			<where>
				<if test="searchKeyWord != null and searchKeyWord != ''">
			      AND (STOCK_NAME LIKE  '%' || #{searchKeyWord} || '%'
			      OR STOCK_NAME LIKE CONCAT(#{searchKeyWord}, '%')
			      OR STOCK_NAME LIKE CONCAT('%', #{searchKeyWord})
			      OR STOCK_NAME = #{searchKeyWord})
			    </if>
			    <if test="locationCode != -1">
			    	<if test="locationCode &lt; 100"> <!--들어온 locationCode 가 두자리수일떄-->
			    		AND REGION_NO LIKE CONCAT(#{locationCode}, '%') <!-- 시도 코드 두자리만 들어왔을떄 주소 코드가 앞 두자리가 일치하는 것 모두를 SELECT-->
			    	</if>
			    	<if test="locationCode &gt; 100"> <!--들어온 locationCode 가 다섯자리 수 일떄-->
			    		AND REGION_NO = #{locationCode} <!-- 주소 코드 다섯자리가 정확히 일치하는 것만 SELECT-->
			    	</if>
			      
			      
			    </if>
			    <if test="stockType != -1">
			      AND STOCK_TYPE = #{stockType}
			    </if>
			    <if test="stockForm != -1">
			      AND STOCK_FORM = #{stockForm}
			    </if>
			</where>)
			 i ON c.stockNo = i.STOCK_NO
	</select>
	<select id="selectAnyFour"><!--위치 상관 x-->
		SELECT *
			FROM (
			    SELECT *
			    FROM (
			        SELECT *
			        FROM (
			            SELECT STOCK_NO AS stockNo, LAT AS lat, LNG AS lng
			            FROM STOCK_COORD
			        ) c
			        INNER JOIN (
			            SELECT * FROM STOCK_INFO
			        ) i ON c.stockNo = i.STOCK_NO
			        INNER JOIN (
			            SELECT MEMBER_NO, COMPANY_NAME, COMPANY_LOCATION, PRESIDENT_NAME , BROKER_NO, PRESIDENT_PHONE FROM BROKER_INFO
			        ) b ON i.MEMBER_NO = b.MEMBER_NO
			        ORDER BY i.REGIST_DATE ASC
			    )
			)
			WHERE ROWNUM &lt;= 4
	</select>
</mapper>
